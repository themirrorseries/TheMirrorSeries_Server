// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/dto/UserDTO.txt

package DTO

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserDTO struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserDTO) Reset()         { *m = UserDTO{} }
func (m *UserDTO) String() string { return proto.CompactTextString(m) }
func (*UserDTO) ProtoMessage()    {}
func (*UserDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6049c31cccf54cb, []int{0}
}

func (m *UserDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDTO.Unmarshal(m, b)
}
func (m *UserDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDTO.Marshal(b, m, deterministic)
}
func (m *UserDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDTO.Merge(m, src)
}
func (m *UserDTO) XXX_Size() int {
	return xxx_messageInfo_UserDTO.Size(m)
}
func (m *UserDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDTO.DiscardUnknown(m)
}

var xxx_messageInfo_UserDTO proto.InternalMessageInfo

func (m *UserDTO) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserDTO) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func init() {
	proto.RegisterType((*UserDTO)(nil), "UserDTO")
}

func init() { proto.RegisterFile("proto/dto/UserDTO.txt", fileDescriptor_e6049c31cccf54cb) }

var fileDescriptor_e6049c31cccf54cb = []byte{
	// 91 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x29, 0xc9, 0xd7, 0x0f, 0x2d, 0x4e, 0x2d, 0x72, 0x09, 0xf1, 0xd7, 0x2b, 0xa9,
	0x28, 0x51, 0xd2, 0xe5, 0x62, 0x87, 0x72, 0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x18, 0x15,
	0x18, 0x35, 0x58, 0x83, 0x98, 0x32, 0x53, 0x84, 0x84, 0xb8, 0x58, 0x4a, 0x4b, 0x33, 0x53, 0x24,
	0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0xc0, 0xec, 0x24, 0x36, 0xb0, 0x29, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xed, 0x59, 0xb2, 0x59, 0x4e, 0x00, 0x00, 0x00,
}
