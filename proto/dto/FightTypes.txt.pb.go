// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/FightTypes.txt

package DTO

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FightTypes int32

const (
	FightTypes_MOVE_CREQ     FightTypes = 0
	FightTypes_SKILL_CREQ    FightTypes = 1
	FightTypes_LOAD_UP_CREQ  FightTypes = 2
	FightTypes_LOAD_UP_SREQ  FightTypes = 3
	FightTypes_INFORM_SRES   FightTypes = 4
	FightTypes_LIVEROOM_CREQ FightTypes = 5
	FightTypes_DEATH_CREQ    FightTypes = 6
	FightTypes_WIN_CREQ      FightTypes = 7
)

var FightTypes_name = map[int32]string{
	0: "MOVE_CREQ",
	1: "SKILL_CREQ",
	2: "LOAD_UP_CREQ",
	3: "LOAD_UP_SREQ",
	4: "INFORM_SRES",
	5: "LIVEROOM_CREQ",
	6: "DEATH_CREQ",
	7: "WIN_CREQ",
}

var FightTypes_value = map[string]int32{
	"MOVE_CREQ":     0,
	"SKILL_CREQ":    1,
	"LOAD_UP_CREQ":  2,
	"LOAD_UP_SREQ":  3,
	"INFORM_SRES":   4,
	"LIVEROOM_CREQ": 5,
	"DEATH_CREQ":    6,
	"WIN_CREQ":      7,
}

func (x FightTypes) String() string {
	return proto.EnumName(FightTypes_name, int32(x))
}

func (FightTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f64657f58ba6d9f1, []int{0}
}

func init() {
	proto.RegisterEnum("FightTypes", FightTypes_name, FightTypes_value)
}

func init() { proto.RegisterFile("proto/FightTypes.txt", fileDescriptor_f64657f58ba6d9f1) }

var fileDescriptor_f64657f58ba6d9f1 = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x77, 0xcb, 0x4c, 0xcf, 0x28, 0x09, 0xa9, 0x2c, 0x48, 0x2d, 0xd6, 0x2b, 0xa9, 0x28,
	0xd1, 0x9a, 0xc8, 0xc8, 0xc5, 0x85, 0x10, 0x12, 0xe2, 0xe5, 0xe2, 0xf4, 0xf5, 0x0f, 0x73, 0x8d,
	0x77, 0x0e, 0x72, 0x0d, 0x14, 0x60, 0x10, 0xe2, 0xe3, 0xe2, 0x0a, 0xf6, 0xf6, 0xf4, 0xf1, 0x81,
	0xf0, 0x19, 0x85, 0x04, 0xb8, 0x78, 0x7c, 0xfc, 0x1d, 0x5d, 0xe2, 0x43, 0x03, 0x20, 0x22, 0x4c,
	0xc8, 0x22, 0xc1, 0x20, 0x11, 0x66, 0x21, 0x7e, 0x2e, 0x6e, 0x4f, 0x3f, 0x37, 0xff, 0x20, 0x5f,
	0x90, 0x40, 0xb0, 0x00, 0x8b, 0x90, 0x20, 0x17, 0xaf, 0x8f, 0x67, 0x98, 0x6b, 0x90, 0xbf, 0xbf,
	0x2f, 0x44, 0x17, 0x2b, 0xc8, 0x5c, 0x17, 0x57, 0xc7, 0x10, 0x0f, 0x08, 0x9f, 0x4d, 0x88, 0x87,
	0x8b, 0x23, 0xdc, 0xd3, 0x0f, 0xc2, 0x63, 0x4f, 0x62, 0x03, 0xbb, 0xd4, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x72, 0x65, 0x24, 0x47, 0xb2, 0x00, 0x00, 0x00,
}
